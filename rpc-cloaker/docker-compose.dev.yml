version: '3.8'

services:
  # PostgreSQL + TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: rpc_postgres_dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rpc_cloaker
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rpc_network_dev

  # Single Redis instance for development
  redis:
    image: redis:7-alpine
    container_name: rpc_redis_dev
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - rpc_network_dev

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: rpc_ml_service_dev
    environment:
      SERVICE_NAME: rpc-cloaker-ml
      SERVICE_PORT: 5000
      API_KEY: dev_ml_service_key
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rpc_cloaker
      REDIS_URL: redis://redis:6379
      MODEL_PATH: /app/models
      MLFLOW_TRACKING_URI: file:///app/mlruns
      LOG_LEVEL: DEBUG
    volumes:
      - ./ml-service:/app
      - ml_models_dev:/app/models
      - ml_runs_dev:/app/mlruns
    ports:
      - "5000:5000"
    networks:
      - rpc_network_dev
    command: python -m uvicorn app:app --host 0.0.0.0 --port 5000 --reload

networks:
  rpc_network_dev:
    driver: bridge

volumes:
  postgres_data_dev:
  redis_data_dev:
  ml_models_dev:
  ml_runs_dev: